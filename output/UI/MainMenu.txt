extends Control

@onready var name_line_edit: LineEdit = $VBoxContainer/NameLineEdit # Path seems to be missing ColorRect if VBox is child of ColorRect
@onready var status_label: RichTextLabel = $VBoxContainer/StatusLabel # Same path concern as above

func _on_OnlineButton_pressed() -> void:
	get_node("AnimationPlayer").stop() # Assuming AnimationPlayer is a direct child of MainMenu root
	# --- NAME CHECK LOGIC (should be similar to LANButton) ---
	if name_line_edit.text.strip_edges() == "": # Check if empty after stripping whitespace
		status_label.text = "Enter name before proceeding."
		get_node("AnimationPlayer").play("fade")
		return 
	# --- END NAME CHECK ---
	# NetworkManager.set_player_name(name_line_edit.text.strip_edges()) # When NetworkManager exists
	status_label.text = "Online: Work In Progress"
	get_node("AnimationPlayer").play("fade")

func _on_LANButton_pressed() -> void:
	# --- Corrected Logic for Name Check ---
	if name_line_edit.text.strip_edges() == "": # Use .strip_edges() to remove leading/trailing whitespace
		get_node("AnimationPlayer").stop() # Assuming AnimationPlayer is a direct child
		status_label.text = "Enter name before proceeding."
		get_node("AnimationPlayer").play("fade")
	else:
		NetworkManager.set_player_name(name_line_edit.text.strip_edges()) # When NetworkManager exists
		status_label.text = "" # Clear status label on success
		get_tree().change_scene_to_file("res://UI/LANMenu.tscn") # Ensure this path is correct

func _on_ExitButton_pressed() -> void:
	get_tree().quit()
